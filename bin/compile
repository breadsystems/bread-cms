#!/usr/bin/env bash

usage() {
  echo 'usage: $(basename $0) [-h|--help]'
  echo
  echo '  OPTIONS:'
  echo
  echo '  -h|--help show this help text'
}

POSITIONAL=()
while [[ $# -gt 0 ]]
do
key="$1"

case $key in
    -h|--help)
    # show usage and bail
    usage
    exit
    ;;
    -b|--binary)
    BINARY_NAME=$2
    shift # past argument
    shift # past value
    ;;
    -c|--class)
    JAVA_CLASS=$2
    shift # past argument
    shift # past value
    ;;
    *)
    POSITIONAL+=("$1") # save it in an array for later
    shift # past argument
    ;;
esac

done
set -- "${POSITIONAL[@]}" # restore positional parameters


JAVA_CLASS=${JAVA_CLASS:-'systems.bread.alpha.cms.main'}
BINARY_NAME=${BINARY_NAME:-'bread'}


main() {
  if [[ -z "$GRAALVM_HOME" ]] ; then
    echo "Please set \$GRAALVM_HOME"
    exit 1
  fi

  rm -rf classes/*
  rm -rf target/*

  echo "compiling ${JAVA_CLASS}"
  clojure -M:cms -e "(compile '${JAVA_CLASS})"

  if [[ $? -ne 0 ]] ; then
    echo "Error compiling ${JAVA_CLASS}, aborting"
    exit 1
  fi

  "$GRAALVM_HOME/bin/gu" install native-image

  echo "compiling native binary \`${BINARY_NAME}\` from ${JAVA_CLASS}"
  "$GRAALVM_HOME/bin/native-image" \
    -cp "$(clojure -Spath -M:cms)":classes \
    -H:Name=$BINARY_NAME \
    -H:+ReportExceptionStackTraces \
    -H:+PrintClassInitialization \
    --enable-url-protocols=http,https \
    --initialize-at-build-time \
    --verbose \
    --no-fallback \
    --no-server \
    --static \
    "-J-Xmx3g" \
    --trace-object-instantiation=java.lang.Thread \
    $JAVA_CLASS
}


main
