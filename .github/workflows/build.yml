name: release
run-name: Build a release
on:
  pull_request:
    types:
      - closed

jobs:
  build-release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # Fetch entire commit history.
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Install Clojure tools
        uses: DeLaGuardo/setup-clojure@10.1
        with:
          cli: 1.11.1.1224

      - name: Cache Clojure deps
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
          key: cljdeps-${{ hashFiles('deps.edn') }}

      - name: Setup tag
        run: |
          echo "RELEASE_TAG=$(clojure -T:build tag)" >> $GITHUB_ENV

      - name: Create tag
        uses: actions/github-script@v6
        with:
          script: |
            const {RELEASE_TAG} = process.env
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${RELEASE_TAG}`,
              sha: context.sha,
            })

      - name: Build release
        env:
          CLOJARS_USERNAME: ${{ secrets.CLOJARS_USERNAME }}
          CLOJARS_PASSWORD: ${{ secrets.CLOJARS_PASSWORD }}
        run: |
          clojure -T:build jar
          clojure -T:build deploy
